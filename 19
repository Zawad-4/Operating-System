#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

#define NUM_THREADS 5

pthread_mutex_t mutex;

void* printMessage(void* arg) {
    pthread_mutex_lock(&mutex);  // Lock the mutex

    int threadID = *(int*)arg;
    printf("Thread %d is printing a message.\n", threadID);

    pthread_mutex_unlock(&mutex);  // Unlock the mutex

    return NULL;
}

int main() {
    pthread_t threads[NUM_THREADS];
    int threadIDs[NUM_THREADS];

    // Initialize the mutex
    pthread_mutex_init(&mutex, NULL);

    for (int i = 0; i < NUM_THREADS; i++) {
        threadIDs[i] = i + 1;
        pthread_create(&threads[i], NULL, printMessage, (void*)&threadIDs[i]);
    }

    // Join the threads
    for (int i = 0; i < NUM_THREADS; i++) {
        pthread_join(threads[i], NULL);
    }

    // Destroy the mutex
    pthread_mutex_destroy(&mutex);

    return 0;
}
