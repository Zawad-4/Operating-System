#include <stdio.h>

#define MAX 10
#define RESOURCES 3
#define PROCESSES 5

int available[RESOURCES];
int maximum[PROCESSES][RESOURCES];
int allocation[PROCESSES][RESOURCES];
int need[PROCESSES][RESOURCES];

void calculateNeed() {
    for (int i = 0; i < PROCESSES; i++) {
        for (int j = 0; j < RESOURCES; j++) {
            need[i][j] = maximum[i][j] - allocation[i][j];
        }
    }
}

int isSafe() {
    int work[RESOURCES];
    for (int i = 0; i < RESOURCES; i++) {
        work[i] = available[i];
    }

    int finish[PROCESSES] = {0};
    int safeSeq[PROCESSES];
    int count = 0;

    while (count < PROCESSES) {
        int found = 0;
        for (int p = 0; p < PROCESSES; p++) {
            if (!finish[p]) {
                int canAllocate = 1;
                for (int r = 0; r < RESOURCES; r++) {
                    if (need[p][r] > work[r]) {
                        canAllocate = 0;
                        break;
                    }
                }
                if (canAllocate) {
                    for (int r = 0; r < RESOURCES; r++) {
                        work[r] += allocation[p][r];
                    }
                    finish[p] = 1;
                    safeSeq[count++] = p;
                    found = 1;
                    break;
                }
            }
        }
        if (!found) {
            return 0;
        }
    }

    printf("System is in a safe state.\nSafe Sequence: ");
    for (int i = 0; i < PROCESSES; i++) {
        printf("P%d ", safeSeq[i]);
    }
    printf("\n");
    return 1;
}

int main() {
    int processes, resources;

    printf("Enter number of processes: ");
    scanf("%d", &processes);
    printf("Enter number of resources: ");
    scanf("%d", &resources);

    printf("Enter available resources:\n");
    for (int i = 0; i < resources; i++) {
        scanf("%d", &available[i]);
    }

    printf("Enter maximum demand matrix:\n");
    for (int i = 0; i < processes; i++) {
        for (int j = 0; j < resources; j++) {
            scanf("%d", &maximum[i][j]);
        }
    }

    printf("Enter allocation matrix:\n");
    for (int i = 0; i < processes; i++) {
        for (int j = 0; j < resources; j++) {
            scanf("%d", &allocation[i][j]);
        }
    }

    calculateNeed();

    if (!isSafe()) {
        printf("System is not in a safe state.\n");
    }

    return 0;
}
