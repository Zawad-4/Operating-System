#include <stdio.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <string.h>
#include <stdlib.h>

int main() {
    key_t key = ftok("shmfile", 65);  // Generate a unique key

    // Create a shared memory segment
    int shmid = shmget(key, 1024, 0666 | IPC_CREAT);
    if (shmid == -1) {
        perror("Shared memory creation failed");
        exit(1);
    }

    // Attach to the shared memory
    char *shared_memory = (char *)shmat(shmid, NULL, 0);
    if (shared_memory == (char *)-1) {
        perror("Shared memory attachment failed");
        exit(1);
    }

    // Write data to shared memory
    printf("Write data to shared memory: ");
    fgets(shared_memory, 1024, stdin);

    // Detach from the shared memory
    if (shmdt(shared_memory) == -1) {
        perror("Shared memory detachment failed");
        exit(1);
    }

    // Simulate another process reading from shared memory
    shared_memory = (char *)shmat(shmid, NULL, 0);
    if (shared_memory == (char *)-1) {
        perror("Shared memory attachment failed");
        exit(1);
    }

    printf("Data read from shared memory: %s", shared_memory);

    // Detach and destroy the shared memory
    if (shmdt(shared_memory) == -1) {
        perror("Shared memory detachment failed");
        exit(1);
    }
    if (shmctl(shmid, IPC_RMID, NULL) == -1) {
        perror("Shared memory destruction failed");
        exit(1);
    }

    return 0;
}
